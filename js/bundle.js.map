{"version":3,"sources":["webpack/bootstrap 4b6157caf666a301db86","./js/main.js","./js/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;AAGA;AACA;AACA;AACA,EAAC;;;;;;;ACND;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4b6157caf666a301db86\n **/","var Snake = require(\"./snake\");\n\n\n$l(function(){\n  console.log(\"it's running\");\n  var snake = new Snake();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Coord = function (coord) {\n  this.coord = coord;\n};\n\nCoord.plus = function (dir) {\n  var row = this.coord[0] + dir[0];\n  var col = this.coord[1] + dir[1];\n  return new Coord([row, col]);\n};\n\nCoord.equals = function (pos) {\n  return ( this.coord[0] === pos[0] && this.coord[1] === pos[1] );\n};\n\nvar Snake = function (pos) {\n  this.direction = \"N\";\n  this.segments = [new Coord(pos)];\n  this.maxLength = 1;\n};\n\nSnake.prototype.move = function() {\n  deltas = {\n    \"N\": [-1,0],\n    \"E\": [0,1],\n    \"S\": [1,0],\n    \"W\": [0,-1]\n  };\n\n  var head = this.segments[ this.segments.length - 1 ];\n  this.segments.push( head.plus( this.direction ) );\n\n  if ( this.length() > this.maxLength ) {\n    this.segments.shift();\n  }\n};\n\nSnake.prototype.length = function () {\n  return this.segments.length;\n};\n\nSnake.prototype.isOppositeDirection = function(dir) {\n  oppositeDirs = {\n    \"N\": \"S\",\n    \"E\": \"W\",\n    \"S\": \"N\",\n    \"W\": \"E\"\n  };\n  return dir === oppositeDirs[this.direction];\n};\n\nSnake.prototype.turn = function(newDir) {\n  if ( !this.isOppositeDirection(newDir)) {\n    this.direction = newDir;\n  }\n};\n\nSnake.prototype.grow = function() {\n  this.maxLength++;\n};\n\nvar Board = function (size) {\n  var mid = Math.floor( size/2 );\n  this.snake = new Snake( [ mid, 0]);\n  this.apple = [mid, mid];\n};\n\nBoard.prototype.over = function() {\n  //see if the game is over\n  //see if any pos is repeated in the segments array\n  //see if any segment has a pos with an x or y greater than size\n  //\n\n\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}